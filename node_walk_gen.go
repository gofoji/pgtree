// Code generated by foji 0.3, template: foji/node_walk.go.tpl; DO NOT EDIT.

package pgtree

import (
	"github.com/gofoji/pgtree/nodes"
)

type Visitor func(node nodes.Node, stack []nodes.Node, v Visitor) Visitor

func WalkList(list nodes.Nodes, stack []nodes.Node, v Visitor) {
	for _, n := range list {
		Walk(n, stack, v)
	}
}

func Walk(node nodes.Node, stack []nodes.Node, v Visitor) {
	if node == nil || isNilValue(node) {
		return
	}

	if v = v(node, stack, v); v == nil {
		return
	}

	stack = append(stack, node)
	switch n := node.(type) {
	case *nodes.List:
		WalkList(n.Items, stack, v)
	case *nodes.OidList:
		WalkList(n.Items, stack, v)
	case *nodes.IntList:
		WalkList(n.Items, stack, v)
	case *nodes.Alias:
		WalkList(n.Colnames, stack, v)
	case *nodes.RangeVar:
		Walk(n.Alias, stack, v)
	case *nodes.TableFunc:
		WalkList(n.NsUris, stack, v)
		WalkList(n.NsNames, stack, v)
		Walk(n.Docexpr, stack, v)
		Walk(n.Rowexpr, stack, v)
		WalkList(n.Colnames, stack, v)
		WalkList(n.Coltypes, stack, v)
		WalkList(n.Coltypmods, stack, v)
		WalkList(n.Colcollations, stack, v)
		WalkList(n.Colexprs, stack, v)
		WalkList(n.Coldefexprs, stack, v)
	case *nodes.Var:
		Walk(n.Xpr, stack, v)
	case *nodes.Param:
		Walk(n.Xpr, stack, v)
	case *nodes.Aggref:
		Walk(n.Xpr, stack, v)
		WalkList(n.Aggargtypes, stack, v)
		WalkList(n.Aggdirectargs, stack, v)
		WalkList(n.Args, stack, v)
		WalkList(n.Aggorder, stack, v)
		WalkList(n.Aggdistinct, stack, v)
		Walk(n.Aggfilter, stack, v)
	case *nodes.GroupingFunc:
		Walk(n.Xpr, stack, v)
		WalkList(n.Args, stack, v)
		WalkList(n.Refs, stack, v)
		WalkList(n.Cols, stack, v)
	case *nodes.WindowFunc:
		Walk(n.Xpr, stack, v)
		WalkList(n.Args, stack, v)
		Walk(n.Aggfilter, stack, v)
	case *nodes.SubscriptingRef:
		Walk(n.Xpr, stack, v)
		WalkList(n.Refupperindexpr, stack, v)
		WalkList(n.Reflowerindexpr, stack, v)
		Walk(n.Refexpr, stack, v)
		Walk(n.Refassgnexpr, stack, v)
	case *nodes.FuncExpr:
		Walk(n.Xpr, stack, v)
		WalkList(n.Args, stack, v)
	case *nodes.NamedArgExpr:
		Walk(n.Xpr, stack, v)
		Walk(n.Arg, stack, v)
	case *nodes.OpExpr:
		Walk(n.Xpr, stack, v)
		WalkList(n.Args, stack, v)
	case *nodes.DistinctExpr:
		Walk(n.Xpr, stack, v)
		WalkList(n.Args, stack, v)
	case *nodes.NullIfExpr:
		Walk(n.Xpr, stack, v)
		WalkList(n.Args, stack, v)
	case *nodes.ScalarArrayOpExpr:
		Walk(n.Xpr, stack, v)
		WalkList(n.Args, stack, v)
	case *nodes.BoolExpr:
		Walk(n.Xpr, stack, v)
		WalkList(n.Args, stack, v)
	case *nodes.SubLink:
		Walk(n.Xpr, stack, v)
		Walk(n.Testexpr, stack, v)
		WalkList(n.OperName, stack, v)
		Walk(n.Subselect, stack, v)
	case *nodes.SubPlan:
		Walk(n.Xpr, stack, v)
		Walk(n.Testexpr, stack, v)
		WalkList(n.ParamIds, stack, v)
		WalkList(n.SetParam, stack, v)
		WalkList(n.ParParam, stack, v)
		WalkList(n.Args, stack, v)
	case *nodes.AlternativeSubPlan:
		Walk(n.Xpr, stack, v)
		WalkList(n.Subplans, stack, v)
	case *nodes.FieldSelect:
		Walk(n.Xpr, stack, v)
		Walk(n.Arg, stack, v)
	case *nodes.FieldStore:
		Walk(n.Xpr, stack, v)
		Walk(n.Arg, stack, v)
		WalkList(n.Newvals, stack, v)
		WalkList(n.Fieldnums, stack, v)
	case *nodes.RelabelType:
		Walk(n.Xpr, stack, v)
		Walk(n.Arg, stack, v)
	case *nodes.CoerceViaIo:
		Walk(n.Xpr, stack, v)
		Walk(n.Arg, stack, v)
	case *nodes.ArrayCoerceExpr:
		Walk(n.Xpr, stack, v)
		Walk(n.Arg, stack, v)
		Walk(n.Elemexpr, stack, v)
	case *nodes.ConvertRowtypeExpr:
		Walk(n.Xpr, stack, v)
		Walk(n.Arg, stack, v)
	case *nodes.CollateExpr:
		Walk(n.Xpr, stack, v)
		Walk(n.Arg, stack, v)
	case *nodes.CaseExpr:
		Walk(n.Xpr, stack, v)
		Walk(n.Arg, stack, v)
		WalkList(n.Args, stack, v)
		Walk(n.Defresult, stack, v)
	case *nodes.CaseWhen:
		Walk(n.Xpr, stack, v)
		Walk(n.Expr, stack, v)
		Walk(n.Result, stack, v)
	case *nodes.CaseTestExpr:
		Walk(n.Xpr, stack, v)
	case *nodes.ArrayExpr:
		Walk(n.Xpr, stack, v)
		WalkList(n.Elements, stack, v)
	case *nodes.RowExpr:
		Walk(n.Xpr, stack, v)
		WalkList(n.Args, stack, v)
		WalkList(n.Colnames, stack, v)
	case *nodes.RowCompareExpr:
		Walk(n.Xpr, stack, v)
		WalkList(n.Opnos, stack, v)
		WalkList(n.Opfamilies, stack, v)
		WalkList(n.Inputcollids, stack, v)
		WalkList(n.Largs, stack, v)
		WalkList(n.Rargs, stack, v)
	case *nodes.CoalesceExpr:
		Walk(n.Xpr, stack, v)
		WalkList(n.Args, stack, v)
	case *nodes.MinMaxExpr:
		Walk(n.Xpr, stack, v)
		WalkList(n.Args, stack, v)
	case *nodes.SqlvalueFunction:
		Walk(n.Xpr, stack, v)
	case *nodes.XmlExpr:
		Walk(n.Xpr, stack, v)
		WalkList(n.NamedArgs, stack, v)
		WalkList(n.ArgNames, stack, v)
		WalkList(n.Args, stack, v)
	case *nodes.NullTest:
		Walk(n.Xpr, stack, v)
		Walk(n.Arg, stack, v)
	case *nodes.BooleanTest:
		Walk(n.Xpr, stack, v)
		Walk(n.Arg, stack, v)
	case *nodes.CoerceToDomain:
		Walk(n.Xpr, stack, v)
		Walk(n.Arg, stack, v)
	case *nodes.CoerceToDomainValue:
		Walk(n.Xpr, stack, v)
	case *nodes.SetToDefault:
		Walk(n.Xpr, stack, v)
	case *nodes.CurrentOfExpr:
		Walk(n.Xpr, stack, v)
	case *nodes.NextValueExpr:
		Walk(n.Xpr, stack, v)
	case *nodes.InferenceElem:
		Walk(n.Xpr, stack, v)
		Walk(n.Expr, stack, v)
	case *nodes.TargetEntry:
		Walk(n.Xpr, stack, v)
		Walk(n.Expr, stack, v)
	case *nodes.JoinExpr:
		Walk(n.Larg, stack, v)
		Walk(n.Rarg, stack, v)
		WalkList(n.UsingClause, stack, v)
		Walk(n.Quals, stack, v)
		Walk(n.Alias, stack, v)
	case *nodes.FromExpr:
		WalkList(n.Fromlist, stack, v)
		Walk(n.Quals, stack, v)
	case *nodes.OnConflictExpr:
		WalkList(n.ArbiterElems, stack, v)
		Walk(n.ArbiterWhere, stack, v)
		WalkList(n.OnConflictSet, stack, v)
		Walk(n.OnConflictWhere, stack, v)
		WalkList(n.ExclRelTlist, stack, v)
	case *nodes.IntoClause:
		Walk(n.Rel, stack, v)
		WalkList(n.ColNames, stack, v)
		WalkList(n.Options, stack, v)
		Walk(n.ViewQuery, stack, v)
	case *nodes.RawStmt:
		Walk(n.Stmt, stack, v)
	case *nodes.Query:
		Walk(n.UtilityStmt, stack, v)
		WalkList(n.CteList, stack, v)
		WalkList(n.Rtable, stack, v)
		Walk(n.Jointree, stack, v)
		WalkList(n.TargetList, stack, v)
		Walk(n.OnConflict, stack, v)
		WalkList(n.ReturningList, stack, v)
		WalkList(n.GroupClause, stack, v)
		WalkList(n.GroupingSets, stack, v)
		Walk(n.HavingQual, stack, v)
		WalkList(n.WindowClause, stack, v)
		WalkList(n.DistinctClause, stack, v)
		WalkList(n.SortClause, stack, v)
		Walk(n.LimitOffset, stack, v)
		Walk(n.LimitCount, stack, v)
		WalkList(n.RowMarks, stack, v)
		Walk(n.SetOperations, stack, v)
		WalkList(n.ConstraintDeps, stack, v)
		WalkList(n.WithCheckOptions, stack, v)
	case *nodes.InsertStmt:
		Walk(n.Relation, stack, v)
		WalkList(n.Cols, stack, v)
		Walk(n.SelectStmt, stack, v)
		Walk(n.OnConflictClause, stack, v)
		WalkList(n.ReturningList, stack, v)
		Walk(n.WithClause, stack, v)
	case *nodes.DeleteStmt:
		Walk(n.Relation, stack, v)
		WalkList(n.UsingClause, stack, v)
		Walk(n.WhereClause, stack, v)
		WalkList(n.ReturningList, stack, v)
		Walk(n.WithClause, stack, v)
	case *nodes.UpdateStmt:
		Walk(n.Relation, stack, v)
		WalkList(n.TargetList, stack, v)
		Walk(n.WhereClause, stack, v)
		WalkList(n.FromClause, stack, v)
		WalkList(n.ReturningList, stack, v)
		Walk(n.WithClause, stack, v)
	case *nodes.SelectStmt:
		WalkList(n.DistinctClause, stack, v)
		Walk(n.IntoClause, stack, v)
		WalkList(n.TargetList, stack, v)
		WalkList(n.FromClause, stack, v)
		Walk(n.WhereClause, stack, v)
		WalkList(n.GroupClause, stack, v)
		Walk(n.HavingClause, stack, v)
		WalkList(n.WindowClause, stack, v)
		WalkList(n.ValuesLists, stack, v)
		WalkList(n.SortClause, stack, v)
		Walk(n.LimitOffset, stack, v)
		Walk(n.LimitCount, stack, v)
		WalkList(n.LockingClause, stack, v)
		Walk(n.WithClause, stack, v)
		Walk(n.Larg, stack, v)
		Walk(n.Rarg, stack, v)
	case *nodes.AlterTableStmt:
		Walk(n.Relation, stack, v)
		WalkList(n.Cmds, stack, v)
	case *nodes.AlterTableCmd:
		Walk(n.Newowner, stack, v)
		Walk(n.Def, stack, v)
	case *nodes.AlterDomainStmt:
		WalkList(n.TypeName, stack, v)
		Walk(n.Def, stack, v)
	case *nodes.SetOperationStmt:
		Walk(n.Larg, stack, v)
		Walk(n.Rarg, stack, v)
		WalkList(n.ColTypes, stack, v)
		WalkList(n.ColTypmods, stack, v)
		WalkList(n.ColCollations, stack, v)
		WalkList(n.GroupClauses, stack, v)
	case *nodes.GrantStmt:
		WalkList(n.Objects, stack, v)
		WalkList(n.Privileges, stack, v)
		WalkList(n.Grantees, stack, v)
	case *nodes.GrantRoleStmt:
		WalkList(n.GrantedRoles, stack, v)
		WalkList(n.GranteeRoles, stack, v)
		Walk(n.Grantor, stack, v)
	case *nodes.AlterDefaultPrivilegesStmt:
		WalkList(n.Options, stack, v)
		Walk(n.Action, stack, v)
	case *nodes.ClusterStmt:
		Walk(n.Relation, stack, v)
	case *nodes.CopyStmt:
		Walk(n.Relation, stack, v)
		Walk(n.Query, stack, v)
		WalkList(n.Attlist, stack, v)
		WalkList(n.Options, stack, v)
		Walk(n.WhereClause, stack, v)
	case *nodes.CreateStmt:
		Walk(n.Relation, stack, v)
		WalkList(n.TableElts, stack, v)
		WalkList(n.InhRelations, stack, v)
		Walk(n.Partbound, stack, v)
		Walk(n.Partspec, stack, v)
		Walk(n.OfTypename, stack, v)
		WalkList(n.Constraints, stack, v)
		WalkList(n.Options, stack, v)
	case *nodes.DefineStmt:
		WalkList(n.Defnames, stack, v)
		WalkList(n.Args, stack, v)
		WalkList(n.Definition, stack, v)
	case *nodes.DropStmt:
		WalkList(n.Objects, stack, v)
	case *nodes.TruncateStmt:
		WalkList(n.Relations, stack, v)
	case *nodes.CommentStmt:
		Walk(n.Object, stack, v)
	case *nodes.IndexStmt:
		Walk(n.Relation, stack, v)
		WalkList(n.IndexParams, stack, v)
		WalkList(n.IndexIncludingParams, stack, v)
		WalkList(n.Options, stack, v)
		Walk(n.WhereClause, stack, v)
		WalkList(n.ExcludeOpNames, stack, v)
	case *nodes.CreateFunctionStmt:
		WalkList(n.Funcname, stack, v)
		WalkList(n.Parameters, stack, v)
		Walk(n.ReturnType, stack, v)
		WalkList(n.Options, stack, v)
	case *nodes.AlterFunctionStmt:
		Walk(n.Func, stack, v)
		WalkList(n.Actions, stack, v)
	case *nodes.DoStmt:
		WalkList(n.Args, stack, v)
	case *nodes.RenameStmt:
		Walk(n.Relation, stack, v)
		Walk(n.Object, stack, v)
	case *nodes.RuleStmt:
		Walk(n.Relation, stack, v)
		Walk(n.WhereClause, stack, v)
		WalkList(n.Actions, stack, v)
	case *nodes.TransactionStmt:
		WalkList(n.Options, stack, v)
	case *nodes.ViewStmt:
		Walk(n.View, stack, v)
		WalkList(n.Aliases, stack, v)
		Walk(n.Query, stack, v)
		WalkList(n.Options, stack, v)
	case *nodes.CreateDomainStmt:
		WalkList(n.Domainname, stack, v)
		Walk(n.TypeName, stack, v)
		Walk(n.CollClause, stack, v)
		WalkList(n.Constraints, stack, v)
	case *nodes.CreatedbStmt:
		WalkList(n.Options, stack, v)
	case *nodes.VacuumStmt:
		WalkList(n.Options, stack, v)
		WalkList(n.Rels, stack, v)
	case *nodes.ExplainStmt:
		Walk(n.Query, stack, v)
		WalkList(n.Options, stack, v)
	case *nodes.CreateTableAsStmt:
		Walk(n.Query, stack, v)
		Walk(n.Into, stack, v)
	case *nodes.CreateSeqStmt:
		Walk(n.Sequence, stack, v)
		WalkList(n.Options, stack, v)
	case *nodes.AlterSeqStmt:
		Walk(n.Sequence, stack, v)
		WalkList(n.Options, stack, v)
	case *nodes.VariableSetStmt:
		WalkList(n.Args, stack, v)
	case *nodes.CreateTrigStmt:
		Walk(n.Relation, stack, v)
		WalkList(n.Funcname, stack, v)
		WalkList(n.Args, stack, v)
		WalkList(n.Columns, stack, v)
		Walk(n.WhenClause, stack, v)
		WalkList(n.TransitionRels, stack, v)
		Walk(n.Constrrel, stack, v)
	case *nodes.CreatePlangStmt:
		WalkList(n.Plhandler, stack, v)
		WalkList(n.Plinline, stack, v)
		WalkList(n.Plvalidator, stack, v)
	case *nodes.CreateRoleStmt:
		WalkList(n.Options, stack, v)
	case *nodes.AlterRoleStmt:
		Walk(n.Role, stack, v)
		WalkList(n.Options, stack, v)
	case *nodes.DropRoleStmt:
		WalkList(n.Roles, stack, v)
	case *nodes.LockStmt:
		WalkList(n.Relations, stack, v)
	case *nodes.ConstraintsSetStmt:
		WalkList(n.Constraints, stack, v)
	case *nodes.ReindexStmt:
		Walk(n.Relation, stack, v)
	case *nodes.CreateSchemaStmt:
		Walk(n.Authrole, stack, v)
		WalkList(n.SchemaElts, stack, v)
	case *nodes.AlterDatabaseStmt:
		WalkList(n.Options, stack, v)
	case *nodes.AlterDatabaseSetStmt:
		Walk(n.Setstmt, stack, v)
	case *nodes.AlterRoleSetStmt:
		Walk(n.Role, stack, v)
		Walk(n.Setstmt, stack, v)
	case *nodes.CreateConversionStmt:
		WalkList(n.ConversionName, stack, v)
		WalkList(n.FuncName, stack, v)
	case *nodes.CreateCastStmt:
		Walk(n.Sourcetype, stack, v)
		Walk(n.Targettype, stack, v)
		Walk(n.Func, stack, v)
	case *nodes.CreateOpClassStmt:
		WalkList(n.Opclassname, stack, v)
		WalkList(n.Opfamilyname, stack, v)
		Walk(n.Datatype, stack, v)
		WalkList(n.Items, stack, v)
	case *nodes.CreateOpFamilyStmt:
		WalkList(n.Opfamilyname, stack, v)
	case *nodes.AlterOpFamilyStmt:
		WalkList(n.Opfamilyname, stack, v)
		WalkList(n.Items, stack, v)
	case *nodes.PrepareStmt:
		WalkList(n.Argtypes, stack, v)
		Walk(n.Query, stack, v)
	case *nodes.ExecuteStmt:
		WalkList(n.Params, stack, v)
	case *nodes.DeclareCursorStmt:
		Walk(n.Query, stack, v)
	case *nodes.CreateTableSpaceStmt:
		Walk(n.Owner, stack, v)
		WalkList(n.Options, stack, v)
	case *nodes.AlterObjectDependsStmt:
		Walk(n.Relation, stack, v)
		Walk(n.Object, stack, v)
		Walk(n.Extname, stack, v)
	case *nodes.AlterObjectSchemaStmt:
		Walk(n.Relation, stack, v)
		Walk(n.Object, stack, v)
	case *nodes.AlterOwnerStmt:
		Walk(n.Relation, stack, v)
		Walk(n.Object, stack, v)
		Walk(n.Newowner, stack, v)
	case *nodes.AlterOperatorStmt:
		Walk(n.Opername, stack, v)
		WalkList(n.Options, stack, v)
	case *nodes.DropOwnedStmt:
		WalkList(n.Roles, stack, v)
	case *nodes.ReassignOwnedStmt:
		WalkList(n.Roles, stack, v)
		Walk(n.Newrole, stack, v)
	case *nodes.CompositeTypeStmt:
		Walk(n.Typevar, stack, v)
		WalkList(n.Coldeflist, stack, v)
	case *nodes.CreateEnumStmt:
		WalkList(n.TypeName, stack, v)
		WalkList(n.Vals, stack, v)
	case *nodes.CreateRangeStmt:
		WalkList(n.TypeName, stack, v)
		WalkList(n.Params, stack, v)
	case *nodes.AlterEnumStmt:
		WalkList(n.TypeName, stack, v)
	case *nodes.AlterTsdictionaryStmt:
		WalkList(n.Dictname, stack, v)
		WalkList(n.Options, stack, v)
	case *nodes.AlterTsconfigurationStmt:
		WalkList(n.Cfgname, stack, v)
		WalkList(n.Tokentype, stack, v)
		WalkList(n.Dicts, stack, v)
	case *nodes.CreateFdwStmt:
		WalkList(n.FuncOptions, stack, v)
		WalkList(n.Options, stack, v)
	case *nodes.AlterFdwStmt:
		WalkList(n.FuncOptions, stack, v)
		WalkList(n.Options, stack, v)
	case *nodes.CreateForeignServerStmt:
		WalkList(n.Options, stack, v)
	case *nodes.AlterForeignServerStmt:
		WalkList(n.Options, stack, v)
	case *nodes.CreateUserMappingStmt:
		Walk(n.User, stack, v)
		WalkList(n.Options, stack, v)
	case *nodes.AlterUserMappingStmt:
		Walk(n.User, stack, v)
		WalkList(n.Options, stack, v)
	case *nodes.DropUserMappingStmt:
		Walk(n.User, stack, v)
	case *nodes.AlterTableSpaceOptionsStmt:
		WalkList(n.Options, stack, v)
	case *nodes.AlterTableMoveAllStmt:
		WalkList(n.Roles, stack, v)
	case *nodes.SecLabelStmt:
		Walk(n.Object, stack, v)
	case *nodes.CreateForeignTableStmt:
		Walk(n.Base, stack, v)
		WalkList(n.Options, stack, v)
	case *nodes.ImportForeignSchemaStmt:
		WalkList(n.TableList, stack, v)
		WalkList(n.Options, stack, v)
	case *nodes.CreateExtensionStmt:
		WalkList(n.Options, stack, v)
	case *nodes.AlterExtensionStmt:
		WalkList(n.Options, stack, v)
	case *nodes.AlterExtensionContentsStmt:
		Walk(n.Object, stack, v)
	case *nodes.CreateEventTrigStmt:
		WalkList(n.Whenclause, stack, v)
		WalkList(n.Funcname, stack, v)
	case *nodes.RefreshMatViewStmt:
		Walk(n.Relation, stack, v)
	case *nodes.AlterSystemStmt:
		Walk(n.Setstmt, stack, v)
	case *nodes.CreatePolicyStmt:
		Walk(n.Table, stack, v)
		WalkList(n.Roles, stack, v)
		Walk(n.Qual, stack, v)
		Walk(n.WithCheck, stack, v)
	case *nodes.AlterPolicyStmt:
		Walk(n.Table, stack, v)
		WalkList(n.Roles, stack, v)
		Walk(n.Qual, stack, v)
		Walk(n.WithCheck, stack, v)
	case *nodes.CreateTransformStmt:
		Walk(n.TypeName, stack, v)
		Walk(n.Fromsql, stack, v)
		Walk(n.Tosql, stack, v)
	case *nodes.CreateAmStmt:
		WalkList(n.HandlerName, stack, v)
	case *nodes.CreatePublicationStmt:
		WalkList(n.Options, stack, v)
		WalkList(n.Tables, stack, v)
	case *nodes.AlterPublicationStmt:
		WalkList(n.Options, stack, v)
		WalkList(n.Tables, stack, v)
	case *nodes.CreateSubscriptionStmt:
		WalkList(n.Publication, stack, v)
		WalkList(n.Options, stack, v)
	case *nodes.AlterSubscriptionStmt:
		WalkList(n.Publication, stack, v)
		WalkList(n.Options, stack, v)
	case *nodes.CreateStatsStmt:
		WalkList(n.Defnames, stack, v)
		WalkList(n.StatTypes, stack, v)
		WalkList(n.Exprs, stack, v)
		WalkList(n.Relations, stack, v)
	case *nodes.AlterCollationStmt:
		WalkList(n.Collname, stack, v)
	case *nodes.CallStmt:
		Walk(n.Funccall, stack, v)
		Walk(n.Funcexpr, stack, v)
	case *nodes.AExpr:
		WalkList(n.Name, stack, v)
		Walk(n.Lexpr, stack, v)
		Walk(n.Rexpr, stack, v)
	case *nodes.ColumnRef:
		WalkList(n.Fields, stack, v)
	case *nodes.AConst:
		Walk(n.Val, stack, v)
	case *nodes.FuncCall:
		WalkList(n.Funcname, stack, v)
		WalkList(n.Args, stack, v)
		WalkList(n.AggOrder, stack, v)
		Walk(n.AggFilter, stack, v)
		Walk(n.Over, stack, v)
	case *nodes.AIndices:
		Walk(n.Lidx, stack, v)
		Walk(n.Uidx, stack, v)
	case *nodes.AIndirection:
		Walk(n.Arg, stack, v)
		WalkList(n.Indirection, stack, v)
	case *nodes.AArrayExpr:
		WalkList(n.Elements, stack, v)
	case *nodes.ResTarget:
		WalkList(n.Indirection, stack, v)
		Walk(n.Val, stack, v)
	case *nodes.MultiAssignRef:
		Walk(n.Source, stack, v)
	case *nodes.TypeCast:
		Walk(n.Arg, stack, v)
		Walk(n.TypeName, stack, v)
	case *nodes.CollateClause:
		Walk(n.Arg, stack, v)
		WalkList(n.Collname, stack, v)
	case *nodes.SortBy:
		Walk(n.Node, stack, v)
		WalkList(n.UseOp, stack, v)
	case *nodes.WindowDef:
		WalkList(n.PartitionClause, stack, v)
		WalkList(n.OrderClause, stack, v)
		Walk(n.StartOffset, stack, v)
		Walk(n.EndOffset, stack, v)
	case *nodes.RangeSubselect:
		Walk(n.Subquery, stack, v)
		Walk(n.Alias, stack, v)
	case *nodes.RangeFunction:
		WalkList(n.Functions, stack, v)
		Walk(n.Alias, stack, v)
		WalkList(n.Coldeflist, stack, v)
	case *nodes.RangeTableSample:
		Walk(n.Relation, stack, v)
		WalkList(n.Method, stack, v)
		WalkList(n.Args, stack, v)
		Walk(n.Repeatable, stack, v)
	case *nodes.RangeTableFunc:
		Walk(n.Docexpr, stack, v)
		Walk(n.Rowexpr, stack, v)
		WalkList(n.Namespaces, stack, v)
		WalkList(n.Columns, stack, v)
		Walk(n.Alias, stack, v)
	case *nodes.RangeTableFuncCol:
		Walk(n.TypeName, stack, v)
		Walk(n.Colexpr, stack, v)
		Walk(n.Coldefexpr, stack, v)
	case *nodes.TypeName:
		WalkList(n.Names, stack, v)
		WalkList(n.Typmods, stack, v)
		WalkList(n.ArrayBounds, stack, v)
	case *nodes.ColumnDef:
		Walk(n.TypeName, stack, v)
		Walk(n.RawDefault, stack, v)
		Walk(n.CookedDefault, stack, v)
		Walk(n.IdentitySequence, stack, v)
		Walk(n.CollClause, stack, v)
		WalkList(n.Constraints, stack, v)
		WalkList(n.Fdwoptions, stack, v)
	case *nodes.IndexElem:
		Walk(n.Expr, stack, v)
		WalkList(n.Collation, stack, v)
		WalkList(n.Opclass, stack, v)
	case *nodes.Constraint:
		Walk(n.RawExpr, stack, v)
		WalkList(n.Keys, stack, v)
		WalkList(n.Including, stack, v)
		WalkList(n.Exclusions, stack, v)
		WalkList(n.Options, stack, v)
		Walk(n.WhereClause, stack, v)
		Walk(n.Pktable, stack, v)
		WalkList(n.FkAttrs, stack, v)
		WalkList(n.PkAttrs, stack, v)
		WalkList(n.OldConpfeqop, stack, v)
	case *nodes.DefElem:
		Walk(n.Arg, stack, v)
	case *nodes.RangeTblEntry:
		Walk(n.Tablesample, stack, v)
		Walk(n.Subquery, stack, v)
		WalkList(n.Joinaliasvars, stack, v)
		WalkList(n.Functions, stack, v)
		Walk(n.Tablefunc, stack, v)
		WalkList(n.ValuesLists, stack, v)
		WalkList(n.Coltypes, stack, v)
		WalkList(n.Coltypmods, stack, v)
		WalkList(n.Colcollations, stack, v)
		Walk(n.Alias, stack, v)
		Walk(n.Eref, stack, v)
		WalkList(n.SecurityQuals, stack, v)
	case *nodes.RangeTblFunction:
		Walk(n.Funcexpr, stack, v)
		WalkList(n.Funccolnames, stack, v)
		WalkList(n.Funccoltypes, stack, v)
		WalkList(n.Funccoltypmods, stack, v)
		WalkList(n.Funccolcollations, stack, v)
	case *nodes.TableSampleClause:
		WalkList(n.Args, stack, v)
		Walk(n.Repeatable, stack, v)
	case *nodes.WithCheckOption:
		Walk(n.Qual, stack, v)
	case *nodes.GroupingSet:
		WalkList(n.Content, stack, v)
	case *nodes.WindowClause:
		WalkList(n.PartitionClause, stack, v)
		WalkList(n.OrderClause, stack, v)
		Walk(n.StartOffset, stack, v)
		Walk(n.EndOffset, stack, v)
	case *nodes.ObjectWithArgs:
		WalkList(n.Objname, stack, v)
		WalkList(n.Objargs, stack, v)
	case *nodes.AccessPriv:
		WalkList(n.Cols, stack, v)
	case *nodes.CreateOpClassItem:
		Walk(n.Name, stack, v)
		WalkList(n.OrderFamily, stack, v)
		WalkList(n.ClassArgs, stack, v)
		Walk(n.Storedtype, stack, v)
	case *nodes.TableLikeClause:
		Walk(n.Relation, stack, v)
	case *nodes.FunctionParameter:
		Walk(n.ArgType, stack, v)
		Walk(n.Defexpr, stack, v)
	case *nodes.LockingClause:
		WalkList(n.LockedRels, stack, v)
	case *nodes.XmlSerialize:
		Walk(n.Expr, stack, v)
		Walk(n.TypeName, stack, v)
	case *nodes.WithClause:
		WalkList(n.Ctes, stack, v)
	case *nodes.InferClause:
		WalkList(n.IndexElems, stack, v)
		Walk(n.WhereClause, stack, v)
	case *nodes.OnConflictClause:
		Walk(n.Infer, stack, v)
		WalkList(n.TargetList, stack, v)
		Walk(n.WhereClause, stack, v)
	case *nodes.CommonTableExpr:
		WalkList(n.Aliascolnames, stack, v)
		Walk(n.Ctequery, stack, v)
		WalkList(n.Ctecolnames, stack, v)
		WalkList(n.Ctecoltypes, stack, v)
		WalkList(n.Ctecoltypmods, stack, v)
		WalkList(n.Ctecolcollations, stack, v)
	case *nodes.PartitionElem:
		Walk(n.Expr, stack, v)
		WalkList(n.Collation, stack, v)
		WalkList(n.Opclass, stack, v)
	case *nodes.PartitionSpec:
		WalkList(n.PartParams, stack, v)
	case *nodes.PartitionBoundSpec:
		WalkList(n.Listdatums, stack, v)
		WalkList(n.Lowerdatums, stack, v)
		WalkList(n.Upperdatums, stack, v)
	case *nodes.PartitionRangeDatum:
		Walk(n.Value, stack, v)
	case *nodes.PartitionCmd:
		Walk(n.Name, stack, v)
		Walk(n.Bound, stack, v)
	case *nodes.VacuumRelation:
		Walk(n.Relation, stack, v)
		WalkList(n.VaCols, stack, v)
	case *nodes.Root:
		Walk(n.Node, stack, v)
	case nodes.Nodes:
		WalkList(n, stack, v)
	}
}

type MutateFunc func(node *nodes.Node, stack []*nodes.Node, visitor MutateFunc) MutateFunc

func mutateList(list nodes.Nodes, stack []*nodes.Node, v MutateFunc) {
	for i := range list {
		mutate(&list[i], stack, v)
	}
}

func mutate(node *nodes.Node, stack []*nodes.Node, v MutateFunc) {
	var nodeWrapper nodes.Node
	if node == nil || isNilValue(*node) {
		return
	}

	if v = v(node, stack, v); v == nil {
		return
	}

	stack = append(stack, node)

	switch n := (*node).(type) {
	case *nodes.Integer:
	case *nodes.Float:
	case *nodes.String:
	case *nodes.BitString:
	case *nodes.Null:
	case *nodes.List:
		mutateList(n.Items, stack, v)
	case *nodes.OidList:
		mutateList(n.Items, stack, v)
	case *nodes.IntList:
		mutateList(n.Items, stack, v)
	case *nodes.Alias:
		mutateList(n.Colnames, stack, v)
	case *nodes.RangeVar:
		nodeWrapper = n.Alias
		mutate(&nodeWrapper, stack, v)
	case *nodes.TableFunc:
		mutateList(n.NsUris, stack, v)
		mutateList(n.NsNames, stack, v)
		mutate(&n.Docexpr, stack, v)
		mutate(&n.Rowexpr, stack, v)
		mutateList(n.Colnames, stack, v)
		mutateList(n.Coltypes, stack, v)
		mutateList(n.Coltypmods, stack, v)
		mutateList(n.Colcollations, stack, v)
		mutateList(n.Colexprs, stack, v)
		mutateList(n.Coldefexprs, stack, v)
	case *nodes.Expr:
	case *nodes.Var:
		mutate(&n.Xpr, stack, v)
	case *nodes.Param:
		mutate(&n.Xpr, stack, v)
	case *nodes.Aggref:
		mutate(&n.Xpr, stack, v)
		mutateList(n.Aggargtypes, stack, v)
		mutateList(n.Aggdirectargs, stack, v)
		mutateList(n.Args, stack, v)
		mutateList(n.Aggorder, stack, v)
		mutateList(n.Aggdistinct, stack, v)
		mutate(&n.Aggfilter, stack, v)
	case *nodes.GroupingFunc:
		mutate(&n.Xpr, stack, v)
		mutateList(n.Args, stack, v)
		mutateList(n.Refs, stack, v)
		mutateList(n.Cols, stack, v)
	case *nodes.WindowFunc:
		mutate(&n.Xpr, stack, v)
		mutateList(n.Args, stack, v)
		mutate(&n.Aggfilter, stack, v)
	case *nodes.SubscriptingRef:
		mutate(&n.Xpr, stack, v)
		mutateList(n.Refupperindexpr, stack, v)
		mutateList(n.Reflowerindexpr, stack, v)
		mutate(&n.Refexpr, stack, v)
		mutate(&n.Refassgnexpr, stack, v)
	case *nodes.FuncExpr:
		mutate(&n.Xpr, stack, v)
		mutateList(n.Args, stack, v)
	case *nodes.NamedArgExpr:
		mutate(&n.Xpr, stack, v)
		mutate(&n.Arg, stack, v)
	case *nodes.OpExpr:
		mutate(&n.Xpr, stack, v)
		mutateList(n.Args, stack, v)
	case *nodes.DistinctExpr:
		mutate(&n.Xpr, stack, v)
		mutateList(n.Args, stack, v)
	case *nodes.NullIfExpr:
		mutate(&n.Xpr, stack, v)
		mutateList(n.Args, stack, v)
	case *nodes.ScalarArrayOpExpr:
		mutate(&n.Xpr, stack, v)
		mutateList(n.Args, stack, v)
	case *nodes.BoolExpr:
		mutate(&n.Xpr, stack, v)
		mutateList(n.Args, stack, v)
	case *nodes.SubLink:
		mutate(&n.Xpr, stack, v)
		mutate(&n.Testexpr, stack, v)
		mutateList(n.OperName, stack, v)
		mutate(&n.Subselect, stack, v)
	case *nodes.SubPlan:
		mutate(&n.Xpr, stack, v)
		mutate(&n.Testexpr, stack, v)
		mutateList(n.ParamIds, stack, v)
		mutateList(n.SetParam, stack, v)
		mutateList(n.ParParam, stack, v)
		mutateList(n.Args, stack, v)
	case *nodes.AlternativeSubPlan:
		mutate(&n.Xpr, stack, v)
		mutateList(n.Subplans, stack, v)
	case *nodes.FieldSelect:
		mutate(&n.Xpr, stack, v)
		mutate(&n.Arg, stack, v)
	case *nodes.FieldStore:
		mutate(&n.Xpr, stack, v)
		mutate(&n.Arg, stack, v)
		mutateList(n.Newvals, stack, v)
		mutateList(n.Fieldnums, stack, v)
	case *nodes.RelabelType:
		mutate(&n.Xpr, stack, v)
		mutate(&n.Arg, stack, v)
	case *nodes.CoerceViaIo:
		mutate(&n.Xpr, stack, v)
		mutate(&n.Arg, stack, v)
	case *nodes.ArrayCoerceExpr:
		mutate(&n.Xpr, stack, v)
		mutate(&n.Arg, stack, v)
		mutate(&n.Elemexpr, stack, v)
	case *nodes.ConvertRowtypeExpr:
		mutate(&n.Xpr, stack, v)
		mutate(&n.Arg, stack, v)
	case *nodes.CollateExpr:
		mutate(&n.Xpr, stack, v)
		mutate(&n.Arg, stack, v)
	case *nodes.CaseExpr:
		mutate(&n.Xpr, stack, v)
		mutate(&n.Arg, stack, v)
		mutateList(n.Args, stack, v)
		mutate(&n.Defresult, stack, v)
	case *nodes.CaseWhen:
		mutate(&n.Xpr, stack, v)
		mutate(&n.Expr, stack, v)
		mutate(&n.Result, stack, v)
	case *nodes.CaseTestExpr:
		mutate(&n.Xpr, stack, v)
	case *nodes.ArrayExpr:
		mutate(&n.Xpr, stack, v)
		mutateList(n.Elements, stack, v)
	case *nodes.RowExpr:
		mutate(&n.Xpr, stack, v)
		mutateList(n.Args, stack, v)
		mutateList(n.Colnames, stack, v)
	case *nodes.RowCompareExpr:
		mutate(&n.Xpr, stack, v)
		mutateList(n.Opnos, stack, v)
		mutateList(n.Opfamilies, stack, v)
		mutateList(n.Inputcollids, stack, v)
		mutateList(n.Largs, stack, v)
		mutateList(n.Rargs, stack, v)
	case *nodes.CoalesceExpr:
		mutate(&n.Xpr, stack, v)
		mutateList(n.Args, stack, v)
	case *nodes.MinMaxExpr:
		mutate(&n.Xpr, stack, v)
		mutateList(n.Args, stack, v)
	case *nodes.SqlvalueFunction:
		mutate(&n.Xpr, stack, v)
	case *nodes.XmlExpr:
		mutate(&n.Xpr, stack, v)
		mutateList(n.NamedArgs, stack, v)
		mutateList(n.ArgNames, stack, v)
		mutateList(n.Args, stack, v)
	case *nodes.NullTest:
		mutate(&n.Xpr, stack, v)
		mutate(&n.Arg, stack, v)
	case *nodes.BooleanTest:
		mutate(&n.Xpr, stack, v)
		mutate(&n.Arg, stack, v)
	case *nodes.CoerceToDomain:
		mutate(&n.Xpr, stack, v)
		mutate(&n.Arg, stack, v)
	case *nodes.CoerceToDomainValue:
		mutate(&n.Xpr, stack, v)
	case *nodes.SetToDefault:
		mutate(&n.Xpr, stack, v)
	case *nodes.CurrentOfExpr:
		mutate(&n.Xpr, stack, v)
	case *nodes.NextValueExpr:
		mutate(&n.Xpr, stack, v)
	case *nodes.InferenceElem:
		mutate(&n.Xpr, stack, v)
		mutate(&n.Expr, stack, v)
	case *nodes.TargetEntry:
		mutate(&n.Xpr, stack, v)
		mutate(&n.Expr, stack, v)
	case *nodes.RangeTblRef:
	case *nodes.JoinExpr:
		mutate(&n.Larg, stack, v)
		mutate(&n.Rarg, stack, v)
		mutateList(n.UsingClause, stack, v)
		mutate(&n.Quals, stack, v)
		nodeWrapper = n.Alias
		mutate(&nodeWrapper, stack, v)
	case *nodes.FromExpr:
		mutateList(n.Fromlist, stack, v)
		mutate(&n.Quals, stack, v)
	case *nodes.OnConflictExpr:
		mutateList(n.ArbiterElems, stack, v)
		mutate(&n.ArbiterWhere, stack, v)
		mutateList(n.OnConflictSet, stack, v)
		mutate(&n.OnConflictWhere, stack, v)
		mutateList(n.ExclRelTlist, stack, v)
	case *nodes.IntoClause:
		nodeWrapper = n.Rel
		mutate(&nodeWrapper, stack, v)
		mutateList(n.ColNames, stack, v)
		mutateList(n.Options, stack, v)
		mutate(&n.ViewQuery, stack, v)
	case *nodes.RawStmt:
		mutate(&n.Stmt, stack, v)
	case *nodes.Query:
		mutate(&n.UtilityStmt, stack, v)
		mutateList(n.CteList, stack, v)
		mutateList(n.Rtable, stack, v)
		nodeWrapper = n.Jointree
		mutate(&nodeWrapper, stack, v)
		mutateList(n.TargetList, stack, v)
		nodeWrapper = n.OnConflict
		mutate(&nodeWrapper, stack, v)
		mutateList(n.ReturningList, stack, v)
		mutateList(n.GroupClause, stack, v)
		mutateList(n.GroupingSets, stack, v)
		mutate(&n.HavingQual, stack, v)
		mutateList(n.WindowClause, stack, v)
		mutateList(n.DistinctClause, stack, v)
		mutateList(n.SortClause, stack, v)
		mutate(&n.LimitOffset, stack, v)
		mutate(&n.LimitCount, stack, v)
		mutateList(n.RowMarks, stack, v)
		mutate(&n.SetOperations, stack, v)
		mutateList(n.ConstraintDeps, stack, v)
		mutateList(n.WithCheckOptions, stack, v)
	case *nodes.InsertStmt:
		nodeWrapper = n.Relation
		mutate(&nodeWrapper, stack, v)
		mutateList(n.Cols, stack, v)
		mutate(&n.SelectStmt, stack, v)
		nodeWrapper = n.OnConflictClause
		mutate(&nodeWrapper, stack, v)
		mutateList(n.ReturningList, stack, v)
		nodeWrapper = n.WithClause
		mutate(&nodeWrapper, stack, v)
	case *nodes.DeleteStmt:
		nodeWrapper = n.Relation
		mutate(&nodeWrapper, stack, v)
		mutateList(n.UsingClause, stack, v)
		mutate(&n.WhereClause, stack, v)
		mutateList(n.ReturningList, stack, v)
		nodeWrapper = n.WithClause
		mutate(&nodeWrapper, stack, v)
	case *nodes.UpdateStmt:
		nodeWrapper = n.Relation
		mutate(&nodeWrapper, stack, v)
		mutateList(n.TargetList, stack, v)
		mutate(&n.WhereClause, stack, v)
		mutateList(n.FromClause, stack, v)
		mutateList(n.ReturningList, stack, v)
		nodeWrapper = n.WithClause
		mutate(&nodeWrapper, stack, v)
	case *nodes.SelectStmt:
		mutateList(n.DistinctClause, stack, v)
		nodeWrapper = n.IntoClause
		mutate(&nodeWrapper, stack, v)
		mutateList(n.TargetList, stack, v)
		mutateList(n.FromClause, stack, v)
		mutate(&n.WhereClause, stack, v)
		mutateList(n.GroupClause, stack, v)
		mutate(&n.HavingClause, stack, v)
		mutateList(n.WindowClause, stack, v)
		mutateList(n.ValuesLists, stack, v)
		mutateList(n.SortClause, stack, v)
		mutate(&n.LimitOffset, stack, v)
		mutate(&n.LimitCount, stack, v)
		mutateList(n.LockingClause, stack, v)
		nodeWrapper = n.WithClause
		mutate(&nodeWrapper, stack, v)
		nodeWrapper = n.Larg
		mutate(&nodeWrapper, stack, v)
		nodeWrapper = n.Rarg
		mutate(&nodeWrapper, stack, v)
	case *nodes.AlterTableStmt:
		nodeWrapper = n.Relation
		mutate(&nodeWrapper, stack, v)
		mutateList(n.Cmds, stack, v)
	case *nodes.AlterTableCmd:
		nodeWrapper = n.Newowner
		mutate(&nodeWrapper, stack, v)
		mutate(&n.Def, stack, v)
	case *nodes.AlterDomainStmt:
		mutateList(n.TypeName, stack, v)
		mutate(&n.Def, stack, v)
	case *nodes.SetOperationStmt:
		mutate(&n.Larg, stack, v)
		mutate(&n.Rarg, stack, v)
		mutateList(n.ColTypes, stack, v)
		mutateList(n.ColTypmods, stack, v)
		mutateList(n.ColCollations, stack, v)
		mutateList(n.GroupClauses, stack, v)
	case *nodes.GrantStmt:
		mutateList(n.Objects, stack, v)
		mutateList(n.Privileges, stack, v)
		mutateList(n.Grantees, stack, v)
	case *nodes.GrantRoleStmt:
		mutateList(n.GrantedRoles, stack, v)
		mutateList(n.GranteeRoles, stack, v)
		nodeWrapper = n.Grantor
		mutate(&nodeWrapper, stack, v)
	case *nodes.AlterDefaultPrivilegesStmt:
		mutateList(n.Options, stack, v)
		nodeWrapper = n.Action
		mutate(&nodeWrapper, stack, v)
	case *nodes.ClosePortalStmt:
	case *nodes.ClusterStmt:
		nodeWrapper = n.Relation
		mutate(&nodeWrapper, stack, v)
	case *nodes.CopyStmt:
		nodeWrapper = n.Relation
		mutate(&nodeWrapper, stack, v)
		mutate(&n.Query, stack, v)
		mutateList(n.Attlist, stack, v)
		mutateList(n.Options, stack, v)
		mutate(&n.WhereClause, stack, v)
	case *nodes.CreateStmt:
		nodeWrapper = n.Relation
		mutate(&nodeWrapper, stack, v)
		mutateList(n.TableElts, stack, v)
		mutateList(n.InhRelations, stack, v)
		nodeWrapper = n.Partbound
		mutate(&nodeWrapper, stack, v)
		nodeWrapper = n.Partspec
		mutate(&nodeWrapper, stack, v)
		nodeWrapper = n.OfTypename
		mutate(&nodeWrapper, stack, v)
		mutateList(n.Constraints, stack, v)
		mutateList(n.Options, stack, v)
	case *nodes.DefineStmt:
		mutateList(n.Defnames, stack, v)
		mutateList(n.Args, stack, v)
		mutateList(n.Definition, stack, v)
	case *nodes.DropStmt:
		mutateList(n.Objects, stack, v)
	case *nodes.TruncateStmt:
		mutateList(n.Relations, stack, v)
	case *nodes.CommentStmt:
		mutate(&n.Object, stack, v)
	case *nodes.FetchStmt:
	case *nodes.IndexStmt:
		nodeWrapper = n.Relation
		mutate(&nodeWrapper, stack, v)
		mutateList(n.IndexParams, stack, v)
		mutateList(n.IndexIncludingParams, stack, v)
		mutateList(n.Options, stack, v)
		mutate(&n.WhereClause, stack, v)
		mutateList(n.ExcludeOpNames, stack, v)
	case *nodes.CreateFunctionStmt:
		mutateList(n.Funcname, stack, v)
		mutateList(n.Parameters, stack, v)
		nodeWrapper = n.ReturnType
		mutate(&nodeWrapper, stack, v)
		mutateList(n.Options, stack, v)
	case *nodes.AlterFunctionStmt:
		nodeWrapper = n.Func
		mutate(&nodeWrapper, stack, v)
		mutateList(n.Actions, stack, v)
	case *nodes.DoStmt:
		mutateList(n.Args, stack, v)
	case *nodes.RenameStmt:
		nodeWrapper = n.Relation
		mutate(&nodeWrapper, stack, v)
		mutate(&n.Object, stack, v)
	case *nodes.RuleStmt:
		nodeWrapper = n.Relation
		mutate(&nodeWrapper, stack, v)
		mutate(&n.WhereClause, stack, v)
		mutateList(n.Actions, stack, v)
	case *nodes.NotifyStmt:
	case *nodes.ListenStmt:
	case *nodes.UnlistenStmt:
	case *nodes.TransactionStmt:
		mutateList(n.Options, stack, v)
	case *nodes.ViewStmt:
		nodeWrapper = n.View
		mutate(&nodeWrapper, stack, v)
		mutateList(n.Aliases, stack, v)
		mutate(&n.Query, stack, v)
		mutateList(n.Options, stack, v)
	case *nodes.LoadStmt:
	case *nodes.CreateDomainStmt:
		mutateList(n.Domainname, stack, v)
		nodeWrapper = n.TypeName
		mutate(&nodeWrapper, stack, v)
		nodeWrapper = n.CollClause
		mutate(&nodeWrapper, stack, v)
		mutateList(n.Constraints, stack, v)
	case *nodes.CreatedbStmt:
		mutateList(n.Options, stack, v)
	case *nodes.DropdbStmt:
	case *nodes.VacuumStmt:
		mutateList(n.Options, stack, v)
		mutateList(n.Rels, stack, v)
	case *nodes.ExplainStmt:
		mutate(&n.Query, stack, v)
		mutateList(n.Options, stack, v)
	case *nodes.CreateTableAsStmt:
		mutate(&n.Query, stack, v)
		nodeWrapper = n.Into
		mutate(&nodeWrapper, stack, v)
	case *nodes.CreateSeqStmt:
		nodeWrapper = n.Sequence
		mutate(&nodeWrapper, stack, v)
		mutateList(n.Options, stack, v)
	case *nodes.AlterSeqStmt:
		nodeWrapper = n.Sequence
		mutate(&nodeWrapper, stack, v)
		mutateList(n.Options, stack, v)
	case *nodes.VariableSetStmt:
		mutateList(n.Args, stack, v)
	case *nodes.VariableShowStmt:
	case *nodes.DiscardStmt:
	case *nodes.CreateTrigStmt:
		nodeWrapper = n.Relation
		mutate(&nodeWrapper, stack, v)
		mutateList(n.Funcname, stack, v)
		mutateList(n.Args, stack, v)
		mutateList(n.Columns, stack, v)
		mutate(&n.WhenClause, stack, v)
		mutateList(n.TransitionRels, stack, v)
		nodeWrapper = n.Constrrel
		mutate(&nodeWrapper, stack, v)
	case *nodes.CreatePlangStmt:
		mutateList(n.Plhandler, stack, v)
		mutateList(n.Plinline, stack, v)
		mutateList(n.Plvalidator, stack, v)
	case *nodes.CreateRoleStmt:
		mutateList(n.Options, stack, v)
	case *nodes.AlterRoleStmt:
		nodeWrapper = n.Role
		mutate(&nodeWrapper, stack, v)
		mutateList(n.Options, stack, v)
	case *nodes.DropRoleStmt:
		mutateList(n.Roles, stack, v)
	case *nodes.LockStmt:
		mutateList(n.Relations, stack, v)
	case *nodes.ConstraintsSetStmt:
		mutateList(n.Constraints, stack, v)
	case *nodes.ReindexStmt:
		nodeWrapper = n.Relation
		mutate(&nodeWrapper, stack, v)
	case *nodes.CheckPointStmt:
	case *nodes.CreateSchemaStmt:
		nodeWrapper = n.Authrole
		mutate(&nodeWrapper, stack, v)
		mutateList(n.SchemaElts, stack, v)
	case *nodes.AlterDatabaseStmt:
		mutateList(n.Options, stack, v)
	case *nodes.AlterDatabaseSetStmt:
		nodeWrapper = n.Setstmt
		mutate(&nodeWrapper, stack, v)
	case *nodes.AlterRoleSetStmt:
		nodeWrapper = n.Role
		mutate(&nodeWrapper, stack, v)
		nodeWrapper = n.Setstmt
		mutate(&nodeWrapper, stack, v)
	case *nodes.CreateConversionStmt:
		mutateList(n.ConversionName, stack, v)
		mutateList(n.FuncName, stack, v)
	case *nodes.CreateCastStmt:
		nodeWrapper = n.Sourcetype
		mutate(&nodeWrapper, stack, v)
		nodeWrapper = n.Targettype
		mutate(&nodeWrapper, stack, v)
		nodeWrapper = n.Func
		mutate(&nodeWrapper, stack, v)
	case *nodes.CreateOpClassStmt:
		mutateList(n.Opclassname, stack, v)
		mutateList(n.Opfamilyname, stack, v)
		nodeWrapper = n.Datatype
		mutate(&nodeWrapper, stack, v)
		mutateList(n.Items, stack, v)
	case *nodes.CreateOpFamilyStmt:
		mutateList(n.Opfamilyname, stack, v)
	case *nodes.AlterOpFamilyStmt:
		mutateList(n.Opfamilyname, stack, v)
		mutateList(n.Items, stack, v)
	case *nodes.PrepareStmt:
		mutateList(n.Argtypes, stack, v)
		mutate(&n.Query, stack, v)
	case *nodes.ExecuteStmt:
		mutateList(n.Params, stack, v)
	case *nodes.DeallocateStmt:
	case *nodes.DeclareCursorStmt:
		mutate(&n.Query, stack, v)
	case *nodes.CreateTableSpaceStmt:
		nodeWrapper = n.Owner
		mutate(&nodeWrapper, stack, v)
		mutateList(n.Options, stack, v)
	case *nodes.DropTableSpaceStmt:
	case *nodes.AlterObjectDependsStmt:
		nodeWrapper = n.Relation
		mutate(&nodeWrapper, stack, v)
		mutate(&n.Object, stack, v)
		mutate(&n.Extname, stack, v)
	case *nodes.AlterObjectSchemaStmt:
		nodeWrapper = n.Relation
		mutate(&nodeWrapper, stack, v)
		mutate(&n.Object, stack, v)
	case *nodes.AlterOwnerStmt:
		nodeWrapper = n.Relation
		mutate(&nodeWrapper, stack, v)
		mutate(&n.Object, stack, v)
		nodeWrapper = n.Newowner
		mutate(&nodeWrapper, stack, v)
	case *nodes.AlterOperatorStmt:
		nodeWrapper = n.Opername
		mutate(&nodeWrapper, stack, v)
		mutateList(n.Options, stack, v)
	case *nodes.DropOwnedStmt:
		mutateList(n.Roles, stack, v)
	case *nodes.ReassignOwnedStmt:
		mutateList(n.Roles, stack, v)
		nodeWrapper = n.Newrole
		mutate(&nodeWrapper, stack, v)
	case *nodes.CompositeTypeStmt:
		nodeWrapper = n.Typevar
		mutate(&nodeWrapper, stack, v)
		mutateList(n.Coldeflist, stack, v)
	case *nodes.CreateEnumStmt:
		mutateList(n.TypeName, stack, v)
		mutateList(n.Vals, stack, v)
	case *nodes.CreateRangeStmt:
		mutateList(n.TypeName, stack, v)
		mutateList(n.Params, stack, v)
	case *nodes.AlterEnumStmt:
		mutateList(n.TypeName, stack, v)
	case *nodes.AlterTsdictionaryStmt:
		mutateList(n.Dictname, stack, v)
		mutateList(n.Options, stack, v)
	case *nodes.AlterTsconfigurationStmt:
		mutateList(n.Cfgname, stack, v)
		mutateList(n.Tokentype, stack, v)
		mutateList(n.Dicts, stack, v)
	case *nodes.CreateFdwStmt:
		mutateList(n.FuncOptions, stack, v)
		mutateList(n.Options, stack, v)
	case *nodes.AlterFdwStmt:
		mutateList(n.FuncOptions, stack, v)
		mutateList(n.Options, stack, v)
	case *nodes.CreateForeignServerStmt:
		mutateList(n.Options, stack, v)
	case *nodes.AlterForeignServerStmt:
		mutateList(n.Options, stack, v)
	case *nodes.CreateUserMappingStmt:
		nodeWrapper = n.User
		mutate(&nodeWrapper, stack, v)
		mutateList(n.Options, stack, v)
	case *nodes.AlterUserMappingStmt:
		nodeWrapper = n.User
		mutate(&nodeWrapper, stack, v)
		mutateList(n.Options, stack, v)
	case *nodes.DropUserMappingStmt:
		nodeWrapper = n.User
		mutate(&nodeWrapper, stack, v)
	case *nodes.AlterTableSpaceOptionsStmt:
		mutateList(n.Options, stack, v)
	case *nodes.AlterTableMoveAllStmt:
		mutateList(n.Roles, stack, v)
	case *nodes.SecLabelStmt:
		mutate(&n.Object, stack, v)
	case *nodes.CreateForeignTableStmt:
		nodeWrapper = n.Base
		mutate(&nodeWrapper, stack, v)
		mutateList(n.Options, stack, v)
	case *nodes.ImportForeignSchemaStmt:
		mutateList(n.TableList, stack, v)
		mutateList(n.Options, stack, v)
	case *nodes.CreateExtensionStmt:
		mutateList(n.Options, stack, v)
	case *nodes.AlterExtensionStmt:
		mutateList(n.Options, stack, v)
	case *nodes.AlterExtensionContentsStmt:
		mutate(&n.Object, stack, v)
	case *nodes.CreateEventTrigStmt:
		mutateList(n.Whenclause, stack, v)
		mutateList(n.Funcname, stack, v)
	case *nodes.AlterEventTrigStmt:
	case *nodes.RefreshMatViewStmt:
		nodeWrapper = n.Relation
		mutate(&nodeWrapper, stack, v)
	case *nodes.ReplicaIdentityStmt:
	case *nodes.AlterSystemStmt:
		nodeWrapper = n.Setstmt
		mutate(&nodeWrapper, stack, v)
	case *nodes.CreatePolicyStmt:
		nodeWrapper = n.Table
		mutate(&nodeWrapper, stack, v)
		mutateList(n.Roles, stack, v)
		mutate(&n.Qual, stack, v)
		mutate(&n.WithCheck, stack, v)
	case *nodes.AlterPolicyStmt:
		nodeWrapper = n.Table
		mutate(&nodeWrapper, stack, v)
		mutateList(n.Roles, stack, v)
		mutate(&n.Qual, stack, v)
		mutate(&n.WithCheck, stack, v)
	case *nodes.CreateTransformStmt:
		nodeWrapper = n.TypeName
		mutate(&nodeWrapper, stack, v)
		nodeWrapper = n.Fromsql
		mutate(&nodeWrapper, stack, v)
		nodeWrapper = n.Tosql
		mutate(&nodeWrapper, stack, v)
	case *nodes.CreateAmStmt:
		mutateList(n.HandlerName, stack, v)
	case *nodes.CreatePublicationStmt:
		mutateList(n.Options, stack, v)
		mutateList(n.Tables, stack, v)
	case *nodes.AlterPublicationStmt:
		mutateList(n.Options, stack, v)
		mutateList(n.Tables, stack, v)
	case *nodes.CreateSubscriptionStmt:
		mutateList(n.Publication, stack, v)
		mutateList(n.Options, stack, v)
	case *nodes.AlterSubscriptionStmt:
		mutateList(n.Publication, stack, v)
		mutateList(n.Options, stack, v)
	case *nodes.DropSubscriptionStmt:
	case *nodes.CreateStatsStmt:
		mutateList(n.Defnames, stack, v)
		mutateList(n.StatTypes, stack, v)
		mutateList(n.Exprs, stack, v)
		mutateList(n.Relations, stack, v)
	case *nodes.AlterCollationStmt:
		mutateList(n.Collname, stack, v)
	case *nodes.CallStmt:
		nodeWrapper = n.Funccall
		mutate(&nodeWrapper, stack, v)
		nodeWrapper = n.Funcexpr
		mutate(&nodeWrapper, stack, v)
	case *nodes.AExpr:
		mutateList(n.Name, stack, v)
		mutate(&n.Lexpr, stack, v)
		mutate(&n.Rexpr, stack, v)
	case *nodes.ColumnRef:
		mutateList(n.Fields, stack, v)
	case *nodes.ParamRef:
	case *nodes.AConst:
		mutate(&n.Val, stack, v)
	case *nodes.FuncCall:
		mutateList(n.Funcname, stack, v)
		mutateList(n.Args, stack, v)
		mutateList(n.AggOrder, stack, v)
		mutate(&n.AggFilter, stack, v)
		nodeWrapper = n.Over
		mutate(&nodeWrapper, stack, v)
	case *nodes.AStar:
	case *nodes.AIndices:
		mutate(&n.Lidx, stack, v)
		mutate(&n.Uidx, stack, v)
	case *nodes.AIndirection:
		mutate(&n.Arg, stack, v)
		mutateList(n.Indirection, stack, v)
	case *nodes.AArrayExpr:
		mutateList(n.Elements, stack, v)
	case *nodes.ResTarget:
		mutateList(n.Indirection, stack, v)
		mutate(&n.Val, stack, v)
	case *nodes.MultiAssignRef:
		mutate(&n.Source, stack, v)
	case *nodes.TypeCast:
		mutate(&n.Arg, stack, v)
		nodeWrapper = n.TypeName
		mutate(&nodeWrapper, stack, v)
	case *nodes.CollateClause:
		mutate(&n.Arg, stack, v)
		mutateList(n.Collname, stack, v)
	case *nodes.SortBy:
		mutate(&n.Node, stack, v)
		mutateList(n.UseOp, stack, v)
	case *nodes.WindowDef:
		mutateList(n.PartitionClause, stack, v)
		mutateList(n.OrderClause, stack, v)
		mutate(&n.StartOffset, stack, v)
		mutate(&n.EndOffset, stack, v)
	case *nodes.RangeSubselect:
		mutate(&n.Subquery, stack, v)
		nodeWrapper = n.Alias
		mutate(&nodeWrapper, stack, v)
	case *nodes.RangeFunction:
		mutateList(n.Functions, stack, v)
		nodeWrapper = n.Alias
		mutate(&nodeWrapper, stack, v)
		mutateList(n.Coldeflist, stack, v)
	case *nodes.RangeTableSample:
		mutate(&n.Relation, stack, v)
		mutateList(n.Method, stack, v)
		mutateList(n.Args, stack, v)
		mutate(&n.Repeatable, stack, v)
	case *nodes.RangeTableFunc:
		mutate(&n.Docexpr, stack, v)
		mutate(&n.Rowexpr, stack, v)
		mutateList(n.Namespaces, stack, v)
		mutateList(n.Columns, stack, v)
		nodeWrapper = n.Alias
		mutate(&nodeWrapper, stack, v)
	case *nodes.RangeTableFuncCol:
		nodeWrapper = n.TypeName
		mutate(&nodeWrapper, stack, v)
		mutate(&n.Colexpr, stack, v)
		mutate(&n.Coldefexpr, stack, v)
	case *nodes.TypeName:
		mutateList(n.Names, stack, v)
		mutateList(n.Typmods, stack, v)
		mutateList(n.ArrayBounds, stack, v)
	case *nodes.ColumnDef:
		nodeWrapper = n.TypeName
		mutate(&nodeWrapper, stack, v)
		mutate(&n.RawDefault, stack, v)
		mutate(&n.CookedDefault, stack, v)
		nodeWrapper = n.IdentitySequence
		mutate(&nodeWrapper, stack, v)
		nodeWrapper = n.CollClause
		mutate(&nodeWrapper, stack, v)
		mutateList(n.Constraints, stack, v)
		mutateList(n.Fdwoptions, stack, v)
	case *nodes.IndexElem:
		mutate(&n.Expr, stack, v)
		mutateList(n.Collation, stack, v)
		mutateList(n.Opclass, stack, v)
	case *nodes.Constraint:
		mutate(&n.RawExpr, stack, v)
		mutateList(n.Keys, stack, v)
		mutateList(n.Including, stack, v)
		mutateList(n.Exclusions, stack, v)
		mutateList(n.Options, stack, v)
		mutate(&n.WhereClause, stack, v)
		nodeWrapper = n.Pktable
		mutate(&nodeWrapper, stack, v)
		mutateList(n.FkAttrs, stack, v)
		mutateList(n.PkAttrs, stack, v)
		mutateList(n.OldConpfeqop, stack, v)
	case *nodes.DefElem:
		mutate(&n.Arg, stack, v)
	case *nodes.RangeTblEntry:
		nodeWrapper = n.Tablesample
		mutate(&nodeWrapper, stack, v)
		nodeWrapper = n.Subquery
		mutate(&nodeWrapper, stack, v)
		mutateList(n.Joinaliasvars, stack, v)
		mutateList(n.Functions, stack, v)
		nodeWrapper = n.Tablefunc
		mutate(&nodeWrapper, stack, v)
		mutateList(n.ValuesLists, stack, v)
		mutateList(n.Coltypes, stack, v)
		mutateList(n.Coltypmods, stack, v)
		mutateList(n.Colcollations, stack, v)
		nodeWrapper = n.Alias
		mutate(&nodeWrapper, stack, v)
		nodeWrapper = n.Eref
		mutate(&nodeWrapper, stack, v)
		mutateList(n.SecurityQuals, stack, v)
	case *nodes.RangeTblFunction:
		mutate(&n.Funcexpr, stack, v)
		mutateList(n.Funccolnames, stack, v)
		mutateList(n.Funccoltypes, stack, v)
		mutateList(n.Funccoltypmods, stack, v)
		mutateList(n.Funccolcollations, stack, v)
	case *nodes.TableSampleClause:
		mutateList(n.Args, stack, v)
		mutate(&n.Repeatable, stack, v)
	case *nodes.WithCheckOption:
		mutate(&n.Qual, stack, v)
	case *nodes.SortGroupClause:
	case *nodes.GroupingSet:
		mutateList(n.Content, stack, v)
	case *nodes.WindowClause:
		mutateList(n.PartitionClause, stack, v)
		mutateList(n.OrderClause, stack, v)
		mutate(&n.StartOffset, stack, v)
		mutate(&n.EndOffset, stack, v)
	case *nodes.ObjectWithArgs:
		mutateList(n.Objname, stack, v)
		mutateList(n.Objargs, stack, v)
	case *nodes.AccessPriv:
		mutateList(n.Cols, stack, v)
	case *nodes.CreateOpClassItem:
		nodeWrapper = n.Name
		mutate(&nodeWrapper, stack, v)
		mutateList(n.OrderFamily, stack, v)
		mutateList(n.ClassArgs, stack, v)
		nodeWrapper = n.Storedtype
		mutate(&nodeWrapper, stack, v)
	case *nodes.TableLikeClause:
		nodeWrapper = n.Relation
		mutate(&nodeWrapper, stack, v)
	case *nodes.FunctionParameter:
		nodeWrapper = n.ArgType
		mutate(&nodeWrapper, stack, v)
		mutate(&n.Defexpr, stack, v)
	case *nodes.LockingClause:
		mutateList(n.LockedRels, stack, v)
	case *nodes.RowMarkClause:
	case *nodes.XmlSerialize:
		mutate(&n.Expr, stack, v)
		nodeWrapper = n.TypeName
		mutate(&nodeWrapper, stack, v)
	case *nodes.WithClause:
		mutateList(n.Ctes, stack, v)
	case *nodes.InferClause:
		mutateList(n.IndexElems, stack, v)
		mutate(&n.WhereClause, stack, v)
	case *nodes.OnConflictClause:
		nodeWrapper = n.Infer
		mutate(&nodeWrapper, stack, v)
		mutateList(n.TargetList, stack, v)
		mutate(&n.WhereClause, stack, v)
	case *nodes.CommonTableExpr:
		mutateList(n.Aliascolnames, stack, v)
		mutate(&n.Ctequery, stack, v)
		mutateList(n.Ctecolnames, stack, v)
		mutateList(n.Ctecoltypes, stack, v)
		mutateList(n.Ctecoltypmods, stack, v)
		mutateList(n.Ctecolcollations, stack, v)
	case *nodes.RoleSpec:
	case *nodes.TriggerTransition:
	case *nodes.PartitionElem:
		mutate(&n.Expr, stack, v)
		mutateList(n.Collation, stack, v)
		mutateList(n.Opclass, stack, v)
	case *nodes.PartitionSpec:
		mutateList(n.PartParams, stack, v)
	case *nodes.PartitionBoundSpec:
		mutateList(n.Listdatums, stack, v)
		mutateList(n.Lowerdatums, stack, v)
		mutateList(n.Upperdatums, stack, v)
	case *nodes.PartitionRangeDatum:
		mutate(&n.Value, stack, v)
	case *nodes.PartitionCmd:
		nodeWrapper = n.Name
		mutate(&nodeWrapper, stack, v)
		nodeWrapper = n.Bound
		mutate(&nodeWrapper, stack, v)
	case *nodes.VacuumRelation:
		nodeWrapper = n.Relation
		mutate(&nodeWrapper, stack, v)
		mutateList(n.VaCols, stack, v)
	case *nodes.InlineCodeBlock:
	case *nodes.CallContext:
	case *nodes.Root:
		mutate(&n.Node, stack, v)
	case nodes.Nodes:
		mutateList(n, stack, v)
	}
}
